<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="medWebDataSet" targetNamespace="http://tempuri.org/medWebDataSet.xsd" xmlns:mstns="http://tempuri.org/medWebDataSet.xsd" xmlns="http://tempuri.org/medWebDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="medWebConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="medWebConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ClassLibraryWEB.Properties.Settings.GlobalReference.Default.medWebConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DocRecordSetTableAdapter" GeneratorDataComponentClassName="DocRecordSetTableAdapter" Name="DocRecordSet" UserDataComponentName="DocRecordSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.DocRecordSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DocRecordSet] WHERE (([Id] = @Original_Id) AND ([MedCard_Id] = @Original_MedCard_Id) AND ([Doctor_Id] = @Original_Doctor_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DocRecordSet] ([MedCard_Id], [Doctor_Id]) VALUES (@MedCard_Id, @Doctor_Id);
SELECT Id, MedCard_Id, Doctor_Id FROM DocRecordSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, MedCard_Id, Doctor_Id FROM dbo.DocRecordSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DocRecordSet] SET [MedCard_Id] = @MedCard_Id, [Doctor_Id] = @Doctor_Id WHERE (([Id] = @Original_Id) AND ([MedCard_Id] = @Original_MedCard_Id) AND ([Doctor_Id] = @Original_Doctor_Id));
SELECT Id, MedCard_Id, Doctor_Id FROM DocRecordSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="medWeb.dbo.DocRecordSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="MedCard_Id" DataSetColumn="MedCard_Id" />
              <Mapping SourceColumn="Doctor_Id" DataSetColumn="Doctor_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DocumentsSetTableAdapter" GeneratorDataComponentClassName="DocumentsSetTableAdapter" Name="DocumentsSet" UserDataComponentName="DocumentsSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.DocumentsSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DocumentsSet] WHERE (([Id] = @Original_Id) AND ([Person_Id] = @Original_Person_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Person_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Person_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DocumentsSet] ([Name], [Number], [Person_Id]) VALUES (@Name, @Number, @Person_Id);
SELECT Id, Name, Number, Person_Id FROM DocumentsSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Person_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Person_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Number, Person_Id FROM dbo.DocumentsSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DocumentsSet] SET [Name] = @Name, [Number] = @Number, [Person_Id] = @Person_Id WHERE (([Id] = @Original_Id) AND ([Person_Id] = @Original_Person_Id));
SELECT Id, Name, Number, Person_Id FROM DocumentsSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Person_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Person_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Person_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Person_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="medWeb.dbo.DocumentsSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Number" DataSetColumn="Number" />
              <Mapping SourceColumn="Person_Id" DataSetColumn="Person_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FreeTimeSetTableAdapter" GeneratorDataComponentClassName="FreeTimeSetTableAdapter" Name="FreeTimeSet" UserDataComponentName="FreeTimeSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.FreeTimeSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[FreeTimeSet] WHERE (([Id] = @Original_Id) AND ([StartTime] = @Original_StartTime) AND ([Doctor_Id] = @Original_Doctor_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[FreeTimeSet] ([StartTime], [Doctor_Id]) VALUES (@StartTime, @Doctor_Id);
SELECT Id, StartTime, Doctor_Id FROM FreeTimeSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, StartTime, Doctor_Id FROM dbo.FreeTimeSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[FreeTimeSet] SET [StartTime] = @StartTime, [Doctor_Id] = @Doctor_Id WHERE (([Id] = @Original_Id) AND ([StartTime] = @Original_StartTime) AND ([Doctor_Id] = @Original_Doctor_Id));
SELECT Id, StartTime, Doctor_Id FROM FreeTimeSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="medWeb.dbo.FreeTimeSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="StartTime" DataSetColumn="StartTime" />
              <Mapping SourceColumn="Doctor_Id" DataSetColumn="Doctor_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="IllnessSetTableAdapter" GeneratorDataComponentClassName="IllnessSetTableAdapter" Name="IllnessSet" UserDataComponentName="IllnessSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.IllnessSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[IllnessSet] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[IllnessSet] ([Name]) VALUES (@Name);
SELECT Id, Name FROM IllnessSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.IllnessSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[IllnessSet] SET [Name] = @Name WHERE (([Id] = @Original_Id));
SELECT Id, Name FROM IllnessSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="medWeb.dbo.IllnessSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MedCardIllnessTableAdapter" GeneratorDataComponentClassName="MedCardIllnessTableAdapter" Name="MedCardIllness" UserDataComponentName="MedCardIllnessTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.MedCardIllness" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MedCardIllness] WHERE (([MedCard_Id] = @Original_MedCard_Id) AND ([Illness_Id] = @Original_Illness_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Illness_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Illness_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MedCardIllness] ([MedCard_Id], [Illness_Id]) VALUES (@MedCard_Id, @Illness_Id);
SELECT MedCard_Id, Illness_Id FROM MedCardIllness WHERE (Illness_Id = @Illness_Id) AND (MedCard_Id = @MedCard_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Illness_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Illness_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MedCard_Id, Illness_Id FROM dbo.MedCardIllness</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MedCardIllness] SET [MedCard_Id] = @MedCard_Id, [Illness_Id] = @Illness_Id WHERE (([MedCard_Id] = @Original_MedCard_Id) AND ([Illness_Id] = @Original_Illness_Id));
SELECT MedCard_Id, Illness_Id FROM MedCardIllness WHERE (Illness_Id = @Illness_Id) AND (MedCard_Id = @MedCard_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Illness_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Illness_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Illness_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Illness_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MedCard_Id" DataSetColumn="MedCard_Id" />
              <Mapping SourceColumn="Illness_Id" DataSetColumn="Illness_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MedCardSetTableAdapter" GeneratorDataComponentClassName="MedCardSetTableAdapter" Name="MedCardSet" UserDataComponentName="MedCardSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.MedCardSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MedCardSet] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MedCardSet] DEFAULT VALUES;
SELECT Id FROM MedCardSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters />
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id FROM dbo.MedCardSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonSetTableAdapter" GeneratorDataComponentClassName="PersonSetTableAdapter" Name="PersonSet" UserDataComponentName="PersonSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.PersonSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PersonSet] WHERE (([Id] = @Original_Id) AND ([BirthDate] = @Original_BirthDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_BirthDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BirthDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PersonSet] ([FIO], [Nation], [BirthDate], [BirthPlace], [LivePlace], [Pol]) VALUES (@FIO, @Nation, @BirthDate, @BirthPlace, @LivePlace, @Pol);
SELECT Id, FIO, Nation, BirthDate, BirthPlace, LivePlace, Pol FROM PersonSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FIO" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Nation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@BirthDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BirthDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BirthPlace" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BirthPlace" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LivePlace" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LivePlace" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Pol" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Pol" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, FIO, Nation, BirthDate, BirthPlace, LivePlace, Pol FROM dbo.PersonSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PersonSet] SET [FIO] = @FIO, [Nation] = @Nation, [BirthDate] = @BirthDate, [BirthPlace] = @BirthPlace, [LivePlace] = @LivePlace, [Pol] = @Pol WHERE (([Id] = @Original_Id) AND ([BirthDate] = @Original_BirthDate));
SELECT Id, FIO, Nation, BirthDate, BirthPlace, LivePlace, Pol FROM PersonSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FIO" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Nation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@BirthDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BirthDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BirthPlace" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BirthPlace" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LivePlace" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LivePlace" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Pol" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Pol" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_BirthDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BirthDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="medWeb.dbo.PersonSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="FIO" DataSetColumn="FIO" />
              <Mapping SourceColumn="Nation" DataSetColumn="Nation" />
              <Mapping SourceColumn="BirthDate" DataSetColumn="BirthDate" />
              <Mapping SourceColumn="BirthPlace" DataSetColumn="BirthPlace" />
              <Mapping SourceColumn="LivePlace" DataSetColumn="LivePlace" />
              <Mapping SourceColumn="Pol" DataSetColumn="Pol" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonSet_DoctorTableAdapter" GeneratorDataComponentClassName="PersonSet_DoctorTableAdapter" Name="PersonSet_Doctor" UserDataComponentName="PersonSet_DoctorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.PersonSet_Doctor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PersonSet_Doctor] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PersonSet_Doctor] ([Job], [Insurance], [Id]) VALUES (@Job, @Insurance, @Id);
SELECT Job, Insurance, Id FROM PersonSet_Doctor WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Job" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Insurance" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Insurance" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Job, Insurance, Id FROM dbo.PersonSet_Doctor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PersonSet_Doctor] SET [Job] = @Job, [Insurance] = @Insurance, [Id] = @Id WHERE (([Id] = @Original_Id));
SELECT Job, Insurance, Id FROM PersonSet_Doctor WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Job" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Insurance" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Insurance" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Job" DataSetColumn="Job" />
              <Mapping SourceColumn="Insurance" DataSetColumn="Insurance" />
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonSet_PatientTableAdapter" GeneratorDataComponentClassName="PersonSet_PatientTableAdapter" Name="PersonSet_Patient" UserDataComponentName="PersonSet_PatientTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.PersonSet_Patient" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PersonSet_Patient] WHERE (([Id] = @Original_Id) AND ([MedCard_Id] = @Original_MedCard_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PersonSet_Patient] ([OMS], [Blood], [Id], [MedCard_Id]) VALUES (@OMS, @Blood, @Id, @MedCard_Id);
SELECT OMS, Blood, Id, MedCard_Id FROM PersonSet_Patient WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OMS" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OMS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Blood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Blood" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT OMS, Blood, Id, MedCard_Id FROM dbo.PersonSet_Patient</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PersonSet_Patient] SET [OMS] = @OMS, [Blood] = @Blood, [Id] = @Id, [MedCard_Id] = @MedCard_Id WHERE (([Id] = @Original_Id) AND ([MedCard_Id] = @Original_MedCard_Id));
SELECT OMS, Blood, Id, MedCard_Id FROM PersonSet_Patient WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OMS" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OMS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Blood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Blood" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MedCard_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MedCard_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OMS" DataSetColumn="OMS" />
              <Mapping SourceColumn="Blood" DataSetColumn="Blood" />
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="MedCard_Id" DataSetColumn="MedCard_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkTimeSetTableAdapter" GeneratorDataComponentClassName="WorkTimeSetTableAdapter" Name="WorkTimeSet" UserDataComponentName="WorkTimeSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="medWebConnectionString (Settings)" DbObjectName="medWeb.dbo.WorkTimeSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[WorkTimeSet] WHERE (([Id] = @Original_Id) AND ([StartTime] = @Original_StartTime) AND ([Patient_Id] = @Original_Patient_Id) AND ([Doctor_Id] = @Original_Doctor_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Patient_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Patient_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[WorkTimeSet] ([StartTime], [Patient_Id], [Doctor_Id]) VALUES (@StartTime, @Patient_Id, @Doctor_Id);
SELECT Id, StartTime, Patient_Id, Doctor_Id FROM WorkTimeSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Patient_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Patient_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, StartTime, Patient_Id, Doctor_Id FROM dbo.WorkTimeSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[WorkTimeSet] SET [StartTime] = @StartTime, [Patient_Id] = @Patient_Id, [Doctor_Id] = @Doctor_Id WHERE (([Id] = @Original_Id) AND ([StartTime] = @Original_StartTime) AND ([Patient_Id] = @Original_Patient_Id) AND ([Doctor_Id] = @Original_Doctor_Id));
SELECT Id, StartTime, Patient_Id, Doctor_Id FROM WorkTimeSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Patient_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Patient_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Patient_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Patient_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Doctor_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="medWeb.dbo.WorkTimeSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="StartTime" DataSetColumn="StartTime" />
              <Mapping SourceColumn="Patient_Id" DataSetColumn="Patient_Id" />
              <Mapping SourceColumn="Doctor_Id" DataSetColumn="Doctor_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="medWebDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="medWebDataSet" msprop:Generator_UserDSName="medWebDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DocRecordSet" msprop:Generator_TableClassName="DocRecordSetDataTable" msprop:Generator_TableVarName="tableDocRecordSet" msprop:Generator_RowChangedName="DocRecordSetRowChanged" msprop:Generator_TablePropName="DocRecordSet" msprop:Generator_RowDeletingName="DocRecordSetRowDeleting" msprop:Generator_RowChangingName="DocRecordSetRowChanging" msprop:Generator_RowEvHandlerName="DocRecordSetRowChangeEventHandler" msprop:Generator_RowDeletedName="DocRecordSetRowDeleted" msprop:Generator_RowClassName="DocRecordSetRow" msprop:Generator_UserTableName="DocRecordSet" msprop:Generator_RowEvArgName="DocRecordSetRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="MedCard_Id" msprop:Generator_ColumnVarNameInTable="columnMedCard_Id" msprop:Generator_ColumnPropNameInRow="MedCard_Id" msprop:Generator_ColumnPropNameInTable="MedCard_IdColumn" msprop:Generator_UserColumnName="MedCard_Id" type="xs:int" />
              <xs:element name="Doctor_Id" msprop:Generator_ColumnVarNameInTable="columnDoctor_Id" msprop:Generator_ColumnPropNameInRow="Doctor_Id" msprop:Generator_ColumnPropNameInTable="Doctor_IdColumn" msprop:Generator_UserColumnName="Doctor_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="FreeTimeSet" msprop:Generator_TableClassName="FreeTimeSetDataTable" msprop:Generator_TableVarName="tableFreeTimeSet" msprop:Generator_RowChangedName="FreeTimeSetRowChanged" msprop:Generator_TablePropName="FreeTimeSet" msprop:Generator_RowDeletingName="FreeTimeSetRowDeleting" msprop:Generator_RowChangingName="FreeTimeSetRowChanging" msprop:Generator_RowEvHandlerName="FreeTimeSetRowChangeEventHandler" msprop:Generator_RowDeletedName="FreeTimeSetRowDeleted" msprop:Generator_RowClassName="FreeTimeSetRow" msprop:Generator_UserTableName="FreeTimeSet" msprop:Generator_RowEvArgName="FreeTimeSetRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="StartTime" msprop:Generator_ColumnVarNameInTable="columnStartTime" msprop:Generator_ColumnPropNameInRow="StartTime" msprop:Generator_ColumnPropNameInTable="StartTimeColumn" msprop:Generator_UserColumnName="StartTime" type="xs:dateTime" />
              <xs:element name="Doctor_Id" msprop:Generator_ColumnVarNameInTable="columnDoctor_Id" msprop:Generator_ColumnPropNameInRow="Doctor_Id" msprop:Generator_ColumnPropNameInTable="Doctor_IdColumn" msprop:Generator_UserColumnName="Doctor_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="IllnessSet" msprop:Generator_TableClassName="IllnessSetDataTable" msprop:Generator_TableVarName="tableIllnessSet" msprop:Generator_RowChangedName="IllnessSetRowChanged" msprop:Generator_TablePropName="IllnessSet" msprop:Generator_RowDeletingName="IllnessSetRowDeleting" msprop:Generator_RowChangingName="IllnessSetRowChanging" msprop:Generator_RowEvHandlerName="IllnessSetRowChangeEventHandler" msprop:Generator_RowDeletedName="IllnessSetRowDeleted" msprop:Generator_RowClassName="IllnessSetRow" msprop:Generator_UserTableName="IllnessSet" msprop:Generator_RowEvArgName="IllnessSetRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MedCardIllness" msprop:Generator_TableClassName="MedCardIllnessDataTable" msprop:Generator_TableVarName="tableMedCardIllness" msprop:Generator_RowChangedName="MedCardIllnessRowChanged" msprop:Generator_TablePropName="MedCardIllness" msprop:Generator_RowDeletingName="MedCardIllnessRowDeleting" msprop:Generator_RowChangingName="MedCardIllnessRowChanging" msprop:Generator_RowEvHandlerName="MedCardIllnessRowChangeEventHandler" msprop:Generator_RowDeletedName="MedCardIllnessRowDeleted" msprop:Generator_RowClassName="MedCardIllnessRow" msprop:Generator_UserTableName="MedCardIllness" msprop:Generator_RowEvArgName="MedCardIllnessRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MedCard_Id" msprop:Generator_ColumnVarNameInTable="columnMedCard_Id" msprop:Generator_ColumnPropNameInRow="MedCard_Id" msprop:Generator_ColumnPropNameInTable="MedCard_IdColumn" msprop:Generator_UserColumnName="MedCard_Id" type="xs:int" />
              <xs:element name="Illness_Id" msprop:Generator_ColumnVarNameInTable="columnIllness_Id" msprop:Generator_ColumnPropNameInRow="Illness_Id" msprop:Generator_ColumnPropNameInTable="Illness_IdColumn" msprop:Generator_UserColumnName="Illness_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MedCardSet" msprop:Generator_TableClassName="MedCardSetDataTable" msprop:Generator_TableVarName="tableMedCardSet" msprop:Generator_RowChangedName="MedCardSetRowChanged" msprop:Generator_TablePropName="MedCardSet" msprop:Generator_RowDeletingName="MedCardSetRowDeleting" msprop:Generator_RowChangingName="MedCardSetRowChanging" msprop:Generator_RowEvHandlerName="MedCardSetRowChangeEventHandler" msprop:Generator_RowDeletedName="MedCardSetRowDeleted" msprop:Generator_RowClassName="MedCardSetRow" msprop:Generator_UserTableName="MedCardSet" msprop:Generator_RowEvArgName="MedCardSetRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PersonSet" msprop:Generator_TableClassName="PersonSetDataTable" msprop:Generator_TableVarName="tablePersonSet" msprop:Generator_RowChangedName="PersonSetRowChanged" msprop:Generator_TablePropName="PersonSet" msprop:Generator_RowDeletingName="PersonSetRowDeleting" msprop:Generator_RowChangingName="PersonSetRowChanging" msprop:Generator_RowEvHandlerName="PersonSetRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonSetRowDeleted" msprop:Generator_RowClassName="PersonSetRow" msprop:Generator_UserTableName="PersonSet" msprop:Generator_RowEvArgName="PersonSetRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="FIO" msprop:Generator_ColumnVarNameInTable="columnFIO" msprop:Generator_ColumnPropNameInRow="FIO" msprop:Generator_ColumnPropNameInTable="FIOColumn" msprop:Generator_UserColumnName="FIO">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Nation" msprop:Generator_ColumnVarNameInTable="columnNation" msprop:Generator_ColumnPropNameInRow="Nation" msprop:Generator_ColumnPropNameInTable="NationColumn" msprop:Generator_UserColumnName="Nation" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BirthDate" msprop:Generator_ColumnVarNameInTable="columnBirthDate" msprop:Generator_ColumnPropNameInRow="BirthDate" msprop:Generator_ColumnPropNameInTable="BirthDateColumn" msprop:Generator_UserColumnName="BirthDate" type="xs:dateTime" />
              <xs:element name="BirthPlace" msprop:Generator_ColumnVarNameInTable="columnBirthPlace" msprop:Generator_ColumnPropNameInRow="BirthPlace" msprop:Generator_ColumnPropNameInTable="BirthPlaceColumn" msprop:Generator_UserColumnName="BirthPlace" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LivePlace" msprop:Generator_ColumnVarNameInTable="columnLivePlace" msprop:Generator_ColumnPropNameInRow="LivePlace" msprop:Generator_ColumnPropNameInTable="LivePlaceColumn" msprop:Generator_UserColumnName="LivePlace" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Pol" msprop:Generator_ColumnVarNameInTable="columnPol" msprop:Generator_ColumnPropNameInRow="Pol" msprop:Generator_ColumnPropNameInTable="PolColumn" msprop:Generator_UserColumnName="Pol">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DocumentsSet" msprop:Generator_TableClassName="DocumentsSetDataTable" msprop:Generator_TableVarName="tableDocumentsSet" msprop:Generator_RowChangedName="DocumentsSetRowChanged" msprop:Generator_TablePropName="DocumentsSet" msprop:Generator_RowDeletingName="DocumentsSetRowDeleting" msprop:Generator_RowChangingName="DocumentsSetRowChanging" msprop:Generator_RowEvHandlerName="DocumentsSetRowChangeEventHandler" msprop:Generator_RowDeletedName="DocumentsSetRowDeleted" msprop:Generator_RowClassName="DocumentsSetRow" msprop:Generator_UserTableName="DocumentsSet" msprop:Generator_RowEvArgName="DocumentsSetRowChangeEvent" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
                    <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:maxLength value="2147483647" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name="Number" msprop:Generator_ColumnVarNameInTable="columnNumber" msprop:Generator_ColumnPropNameInRow="Number" msprop:Generator_ColumnPropNameInTable="NumberColumn" msprop:Generator_UserColumnName="Number">
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:maxLength value="2147483647" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name="Person_Id" msprop:Generator_ColumnVarNameInTable="columnPerson_Id" msprop:Generator_ColumnPropNameInRow="Person_Id" msprop:Generator_ColumnPropNameInTable="Person_IdColumn" msprop:Generator_UserColumnName="Person_Id" type="xs:int" />
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PersonSet_Doctor" msprop:Generator_TableClassName="PersonSet_DoctorDataTable" msprop:Generator_TableVarName="tablePersonSet_Doctor" msprop:Generator_RowChangedName="PersonSet_DoctorRowChanged" msprop:Generator_TablePropName="PersonSet_Doctor" msprop:Generator_RowDeletingName="PersonSet_DoctorRowDeleting" msprop:Generator_RowChangingName="PersonSet_DoctorRowChanging" msprop:Generator_RowEvHandlerName="PersonSet_DoctorRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonSet_DoctorRowDeleted" msprop:Generator_RowClassName="PersonSet_DoctorRow" msprop:Generator_UserTableName="PersonSet_Doctor" msprop:Generator_RowEvArgName="PersonSet_DoctorRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Job" msprop:Generator_ColumnVarNameInTable="columnJob" msprop:Generator_ColumnPropNameInRow="Job" msprop:Generator_ColumnPropNameInTable="JobColumn" msprop:Generator_UserColumnName="Job">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Insurance" msprop:Generator_ColumnVarNameInTable="columnInsurance" msprop:Generator_ColumnPropNameInRow="Insurance" msprop:Generator_ColumnPropNameInTable="InsuranceColumn" msprop:Generator_UserColumnName="Insurance">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PersonSet_Patient" msprop:Generator_TableClassName="PersonSet_PatientDataTable" msprop:Generator_TableVarName="tablePersonSet_Patient" msprop:Generator_RowChangedName="PersonSet_PatientRowChanged" msprop:Generator_TablePropName="PersonSet_Patient" msprop:Generator_RowDeletingName="PersonSet_PatientRowDeleting" msprop:Generator_RowChangingName="PersonSet_PatientRowChanging" msprop:Generator_RowEvHandlerName="PersonSet_PatientRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonSet_PatientRowDeleted" msprop:Generator_RowClassName="PersonSet_PatientRow" msprop:Generator_UserTableName="PersonSet_Patient" msprop:Generator_RowEvArgName="PersonSet_PatientRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OMS" msprop:Generator_ColumnVarNameInTable="columnOMS" msprop:Generator_ColumnPropNameInRow="OMS" msprop:Generator_ColumnPropNameInTable="OMSColumn" msprop:Generator_UserColumnName="OMS">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Blood" msprop:Generator_ColumnVarNameInTable="columnBlood" msprop:Generator_ColumnPropNameInRow="Blood" msprop:Generator_ColumnPropNameInTable="BloodColumn" msprop:Generator_UserColumnName="Blood" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="MedCard_Id" msprop:Generator_ColumnVarNameInTable="columnMedCard_Id" msprop:Generator_ColumnPropNameInRow="MedCard_Id" msprop:Generator_ColumnPropNameInTable="MedCard_IdColumn" msprop:Generator_UserColumnName="MedCard_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WorkTimeSet" msprop:Generator_TableClassName="WorkTimeSetDataTable" msprop:Generator_TableVarName="tableWorkTimeSet" msprop:Generator_RowChangedName="WorkTimeSetRowChanged" msprop:Generator_TablePropName="WorkTimeSet" msprop:Generator_RowDeletingName="WorkTimeSetRowDeleting" msprop:Generator_RowChangingName="WorkTimeSetRowChanging" msprop:Generator_RowEvHandlerName="WorkTimeSetRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkTimeSetRowDeleted" msprop:Generator_RowClassName="WorkTimeSetRow" msprop:Generator_UserTableName="WorkTimeSet" msprop:Generator_RowEvArgName="WorkTimeSetRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="StartTime" msprop:Generator_ColumnVarNameInTable="columnStartTime" msprop:Generator_ColumnPropNameInRow="StartTime" msprop:Generator_ColumnPropNameInTable="StartTimeColumn" msprop:Generator_UserColumnName="StartTime" type="xs:dateTime" />
              <xs:element name="Patient_Id" msprop:Generator_ColumnVarNameInTable="columnPatient_Id" msprop:Generator_ColumnPropNameInRow="Patient_Id" msprop:Generator_ColumnPropNameInTable="Patient_IdColumn" msprop:Generator_UserColumnName="Patient_Id" type="xs:int" />
              <xs:element name="Doctor_Id" msprop:Generator_ColumnVarNameInTable="columnDoctor_Id" msprop:Generator_ColumnPropNameInRow="Doctor_Id" msprop:Generator_ColumnPropNameInTable="Doctor_IdColumn" msprop:Generator_UserColumnName="Doctor_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DocRecordSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="FreeTimeSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:FreeTimeSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="IllnessSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:IllnessSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="MedCardIllness_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MedCardIllness" />
      <xs:field xpath="mstns:MedCard_Id" />
      <xs:field xpath="mstns:Illness_Id" />
    </xs:unique>
    <xs:unique name="MedCardSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MedCardSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="DocumentsSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DocumentsSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="DocumentsSetKeyToPerson">
      <xs:selector xpath=".//mstns:DocumentsSet" />
      <xs:field xpath="mstns:Person_Id" />
    </xs:unique>
    <xs:unique name="PersonSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PersonSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PersonSet_Doctor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PersonSet_Doctor" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PersonSet_Patient_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PersonSet_Patient" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="WorkTimeSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WorkTimeSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:keyref name="FK_PersonSet_DocumentsSet" refer="PersonSet_Constraint1" msdata:IsNested="true" msprop:rel_Generator_UserChildTable="DocumentsSet" msprop:rel_Generator_ChildPropName="GetDocumentsSetRows" msprop:rel_Generator_UserRelationName="FK_PersonSet_DocumentsSet" msprop:rel_Generator_RelationVarName="relationFK_PersonSet_DocumentsSet" msprop:rel_Generator_UserParentTable="PersonSet" msprop:rel_Generator_ParentPropName="PersonSetRow">
      <xs:selector xpath=".//mstns:DocumentsSet" />
      <xs:field xpath="mstns:Person_Id" />
    </xs:keyref>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_DoctorDocRecord" msdata:parent="PersonSet_Doctor" msdata:child="DocRecordSet" msdata:parentkey="Id" msdata:childkey="Doctor_Id" msprop:Generator_UserChildTable="DocRecordSet" msprop:Generator_ChildPropName="GetDocRecordSetRows" msprop:Generator_UserRelationName="FK_DoctorDocRecord" msprop:Generator_ParentPropName="PersonSet_DoctorRow" msprop:Generator_RelationVarName="relationFK_DoctorDocRecord" msprop:Generator_UserParentTable="PersonSet_Doctor" />
      <msdata:Relationship name="FK_MedCardDocRecord" msdata:parent="MedCardSet" msdata:child="DocRecordSet" msdata:parentkey="Id" msdata:childkey="MedCard_Id" msprop:Generator_UserChildTable="DocRecordSet" msprop:Generator_ChildPropName="GetDocRecordSetRows" msprop:Generator_UserRelationName="FK_MedCardDocRecord" msprop:Generator_ParentPropName="MedCardSetRow" msprop:Generator_RelationVarName="relationFK_MedCardDocRecord" msprop:Generator_UserParentTable="MedCardSet" />
      <msdata:Relationship name="FK_DoctorFreeTime" msdata:parent="PersonSet_Doctor" msdata:child="FreeTimeSet" msdata:parentkey="Id" msdata:childkey="Doctor_Id" msprop:Generator_UserChildTable="FreeTimeSet" msprop:Generator_ChildPropName="GetFreeTimeSetRows" msprop:Generator_UserRelationName="FK_DoctorFreeTime" msprop:Generator_ParentPropName="PersonSet_DoctorRow" msprop:Generator_RelationVarName="relationFK_DoctorFreeTime" msprop:Generator_UserParentTable="PersonSet_Doctor" />
      <msdata:Relationship name="FK_MedCardIllness_Illness" msdata:parent="IllnessSet" msdata:child="MedCardIllness" msdata:parentkey="Id" msdata:childkey="Illness_Id" msprop:Generator_UserChildTable="MedCardIllness" msprop:Generator_ChildPropName="GetMedCardIllnessRows" msprop:Generator_UserRelationName="FK_MedCardIllness_Illness" msprop:Generator_RelationVarName="relationFK_MedCardIllness_Illness" msprop:Generator_UserParentTable="IllnessSet" msprop:Generator_ParentPropName="IllnessSetRow" />
      <msdata:Relationship name="FK_MedCardIllness_MedCard" msdata:parent="MedCardSet" msdata:child="MedCardIllness" msdata:parentkey="Id" msdata:childkey="MedCard_Id" msprop:Generator_UserChildTable="MedCardIllness" msprop:Generator_ChildPropName="GetMedCardIllnessRows" msprop:Generator_UserRelationName="FK_MedCardIllness_MedCard" msprop:Generator_ParentPropName="MedCardSetRow" msprop:Generator_RelationVarName="relationFK_MedCardIllness_MedCard" msprop:Generator_UserParentTable="MedCardSet" />
      <msdata:Relationship name="FK_Patient_inherits_Person" msdata:parent="PersonSet" msdata:child="PersonSet_Patient" msdata:parentkey="Id" msdata:childkey="Id" msprop:Generator_UserChildTable="PersonSet_Patient" msprop:Generator_ChildPropName="GetPersonSet_PatientRows" msprop:Generator_UserRelationName="FK_Patient_inherits_Person" msprop:Generator_RelationVarName="relationFK_Patient_inherits_Person" msprop:Generator_UserParentTable="PersonSet" msprop:Generator_ParentPropName="PersonSetRow" />
      <msdata:Relationship name="FK_PatientMedCard" msdata:parent="MedCardSet" msdata:child="PersonSet_Patient" msdata:parentkey="Id" msdata:childkey="MedCard_Id" msprop:Generator_UserChildTable="PersonSet_Patient" msprop:Generator_ChildPropName="GetPersonSet_PatientRows" msprop:Generator_UserRelationName="FK_PatientMedCard" msprop:Generator_RelationVarName="relationFK_PatientMedCard" msprop:Generator_UserParentTable="MedCardSet" msprop:Generator_ParentPropName="MedCardSetRow" />
      <msdata:Relationship name="FK_DoctorWorkTime" msdata:parent="PersonSet_Doctor" msdata:child="WorkTimeSet" msdata:parentkey="Id" msdata:childkey="Doctor_Id" msprop:Generator_UserChildTable="WorkTimeSet" msprop:Generator_ChildPropName="GetWorkTimeSetRows" msprop:Generator_UserRelationName="FK_DoctorWorkTime" msprop:Generator_RelationVarName="relationFK_DoctorWorkTime" msprop:Generator_UserParentTable="PersonSet_Doctor" msprop:Generator_ParentPropName="PersonSet_DoctorRow" />
      <msdata:Relationship name="FK_PatientWorkTime" msdata:parent="PersonSet_Patient" msdata:child="WorkTimeSet" msdata:parentkey="Id" msdata:childkey="Patient_Id" msprop:Generator_UserChildTable="WorkTimeSet" msprop:Generator_ChildPropName="GetWorkTimeSetRows" msprop:Generator_UserRelationName="FK_PatientWorkTime" msprop:Generator_RelationVarName="relationFK_PatientWorkTime" msprop:Generator_UserParentTable="PersonSet_Patient" msprop:Generator_ParentPropName="PersonSet_PatientRow" />
      <msdata:Relationship name="FK_Doctor_inherits_Person" msdata:parent="PersonSet" msdata:child="PersonSet_Doctor" msdata:parentkey="Id" msdata:childkey="Id" msprop:Generator_UserChildTable="PersonSet_Doctor" msprop:Generator_ChildPropName="GetPersonSet_DoctorRows" msprop:Generator_UserRelationName="FK_Doctor_inherits_Person" msprop:Generator_ParentPropName="PersonSetRow" msprop:Generator_RelationVarName="relationFK_Doctor_inherits_Person" msprop:Generator_UserParentTable="PersonSet" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>